parse
lisp
expression
hard
given
string
expression
representing
lisp
like
expression
return
integer
value
syntax
expression
given
follows
expression
either
integer
let
expression
add
expression
mult
expression
assigned
variable
expression
always
evaluate
single
integer
integer
could
positive
negative
let
expression
take
form
let
v1
e1
v2
e2
vn
en
expr
let
always
string
let
one
pair
alternating
variable
expression
meaning
first
variable
v1
assigned
value
expression
e1
second
variable
v2
assigned
value
expression
e2
sequentially
value
let
expression
value
expression
expr
add
expression
take
form
add
e1
e2
add
always
string
add
always
two
expression
e1
e2
result
addition
evaluation
e1
evaluation
e2
mult
expression
take
form
mult
e1
e2
mult
always
string
mult
always
two
expression
e1
e2
result
multiplication
evaluation
e1
evaluation
e2
question
use
smaller
subset
variable
name
variable
start
lowercase
letter
zero
lowercase
letter
digit
additionally
convenience
name
add
let
mult
protected
never
used
variable
name
finally
concept
scope
expression
variable
name
evaluated
within
context
evaluation
innermost
scope
term
parenthesis
checked
first
value
variable
outer
scope
checked
sequentially
guaranteed
every
expression
legal
please
see
example
detail
scope
hash
table
string
stack
recursion
ternary
expression
parser
number
atom
basic
calculator
iv