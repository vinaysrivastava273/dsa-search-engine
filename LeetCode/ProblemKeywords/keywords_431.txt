lfu
cache
hard
design
implement
data
structure
least
frequently
used
lfu
cache
implement
lfucache
class
lfucache
int
capacity
initializes
object
capacity
data
structure
int
get
int
key
get
value
key
key
exists
cache
otherwise
return
1
void
put
int
key
int
value
update
value
key
present
insert
key
already
present
cache
reach
capacity
invalidate
remove
least
frequently
used
key
inserting
new
item
problem
tie
e
two
key
frequency
least
recently
used
key
would
invalidated
determine
least
frequently
used
key
use
counter
maintained
key
cache
key
smallest
use
counter
least
frequently
used
key
key
first
inserted
cache
use
counter
set
1
due
put
operation
use
counter
key
cache
incremented
either
get
put
operation
called
function
get
put
must
run
1
average
time
complexity
hash
table
linked
list
design
doubly
linked
list
lru
cache
design
memory
file
system